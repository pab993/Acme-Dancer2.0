
package domain;

import java.util.Collection;
import java.util.Date;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.Entity;
import javax.persistence.Index;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.Valid;
import javax.validation.constraints.Future;
import javax.validation.constraints.NotNull;

import org.hibernate.validator.constraints.NotBlank;
import org.hibernate.validator.constraints.SafeHtml;
import org.hibernate.validator.constraints.SafeHtml.WhiteListType;
import org.springframework.format.annotation.DateTimeFormat;

@Entity
@Access(AccessType.PROPERTY)
@Table(indexes = {
	@Index(columnList = "startDate")
})
public class Course extends DomainEntity {

	//Attributes 
	// =================================================================

	private String	title;
	private String	level;
	private Date	startDate;
	private Date	endDate;
	private String	day;
	private String	hour;
	private String	stage;


	@NotBlank
	@SafeHtml(whitelistType = WhiteListType.NONE)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(final String title) {
		this.title = title;
	}

	@NotBlank
	@SafeHtml(whitelistType = WhiteListType.NONE)
	public String getLevel() {
		return this.level;
	}

	public void setLevel(final String level) {
		this.level = level;
	}

	@NotNull
	@Temporal(TemporalType.TIMESTAMP)
	@DateTimeFormat(pattern = "dd/MM/yyyy HH:mm")
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(final Date startDate) {
		this.startDate = startDate;
	}

	@Future
	@NotNull
	@Temporal(TemporalType.TIMESTAMP)
	@DateTimeFormat(pattern = "dd/MM/yyyy HH:mm")
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(final Date endDate) {
		this.endDate = endDate;
	}

	@NotBlank
	@SafeHtml(whitelistType = WhiteListType.NONE)
	public String getDay() {
		return this.day;
	}

	public void setDay(final String day) {
		this.day = day;
	}

	@NotBlank
	@SafeHtml(whitelistType = WhiteListType.NONE)
	public String getHour() {
		return this.hour;
	}

	public void setHour(final String hour) {
		this.hour = hour;
	}

	@NotBlank
	@SafeHtml(whitelistType = WhiteListType.NONE)
	public String getStage() {
		return this.stage;
	}

	public void setStage(final String stage) {
		this.stage = stage;
	}


	//Relationships
	// =================================================================

	private Academy				academy;
	private Style				style;
	private Collection<Apply>	applies;
	private Collection<Dalem>	dalems;


	@NotNull
	@Valid
	@ManyToOne(optional = false)
	public Academy getAcademy() {
		return this.academy;
	}

	public void setAcademy(final Academy academy) {
		this.academy = academy;
	}

	@NotNull
	@Valid
	@ManyToOne(optional = false)
	public Style getStyle() {
		return this.style;
	}

	public void setStyle(final Style style) {
		this.style = style;
	}

	@Valid
	@OneToMany(mappedBy = "course")
	public Collection<Apply> getApplies() {
		return this.applies;
	}

	public void setApplies(final Collection<Apply> applies) {
		this.applies = applies;
	}

	@OneToMany(mappedBy = "course")
	public Collection<Dalem> getDalems() {
		return dalems;
	}

	public void setDalems(Collection<Dalem> dalems) {
		this.dalems = dalems;
	}

}
